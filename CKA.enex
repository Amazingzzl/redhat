<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-export SYSTEM "http://xml.evernote.com/pub/evernote-export2.dtd">
<en-export export-date="20210223T062835Z" application="Evernote/Windows" version="6.x">
<note><title>16.Pod metrics</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div>16.Pod metrics</div><div style="box-sizing: border-box; padding: 8px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.148438);"><div><span style="font-size: 12px;"><span style="font-family: Monaco, Menlo, Consolas, &amp;apos;Courier New&amp;apos;, monospace;"><span style="color: rgb(51, 51, 51);">Task：</span></span></span></div><div><span style="font-size: 12px;"><span style="font-family: Monaco, Menlo, Consolas, &amp;apos;Courier New&amp;apos;, monospace;"><span style="color: rgb(51, 51, 51);">From the pods label name=cpu-user.find pods running high CPU workloads and write the name of the pods consuming most CPU to the file /opt/KUTR00401/KUTR00401.txt (which already exsit)</span></span></span></div><div><span style="font-size: 12px;"><span style="font-family: Monaco, Menlo, Consolas, &amp;apos;Courier New&amp;apos;, monospace;"><span style="color: rgb(51, 51, 51);"><br/></span></span></span></div><div><span style="font-size: 12px;"><span style="font-family: Monaco, Menlo, Consolas, &amp;apos;Courier New&amp;apos;, monospace;"><span style="color: rgb(51, 51, 51);">kubectl config use-context</span></span></span></div><div><br/></div></div><div><br/></div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>Answer:</div><div>kubectl top pods -l name=cpu-user -A</div><div><br/></div><div>echo xx_name &gt;&gt;/opt/KUTR00401/KUTR00401.txt</div><div><br/></div></div><div><br/></div></en-note>]]></content><created>20210222T141815Z</created><updated>20210222T142042Z</updated><note-attributes><author>BurlyLuo</author></note-attributes></note><note><title>15.Sidecar container</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div>15.Sidecar container</div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>Task:</div><div>Without changing its existing, an exsiting pod need to be integrated into kubernetes&apos;s built-in logging archiecture(like kubectl logs).adding a streaming sidecar containers is a good and common way to accomplish this requirements</div><div>Add a busybox sidecar container to the existing Pod legacy-app.The new sidecar container has to run the following commands:</div><div><br/></div><div>/bin/sh -c tail -n+1 -f /var/log/legacy-app.log</div><div><br/></div><div>Use a volume monut named logs to make the file /var/log/legacy-app.log avaliable to the sidecar container.</div><div><br/></div><div>Don&apos;t modify the existing container.</div><div>Don&apos;t modify the path of the log file,both containers must access it at /var/log/legacy-app.log</div><div><br/></div><div><br/></div></div><div><br/></div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>Refer:</div><div><a href="https://kubernetes.io/zh/docs/concepts/cluster-administration/logging/">https://kubernetes.io/zh/docs/concepts/cluster-administration/logging/</a></div><div><br/></div><div>apiVersion: v1</div><div>kind: Pod</div><div>metadata:</div><div>&nbsp; name: counter</div><div>spec:</div><div>&nbsp; containers:</div><div>&nbsp; - name: count</div><div>&nbsp; &nbsp; image: busybox</div><div>&nbsp; &nbsp; args:</div><div>&nbsp; &nbsp; - /bin/sh</div><div>&nbsp; &nbsp; - -c</div><div>&nbsp; &nbsp; - &gt;</div><div>&nbsp; &nbsp; &nbsp; i=0;</div><div>&nbsp; &nbsp; &nbsp; while true;</div><div>&nbsp; &nbsp; &nbsp; do</div><div>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;$i: $(date)&quot; &gt;&gt; /var/log/1.log;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;$(date) INFO $i&quot; &gt;&gt; /var/log/2.log;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; i=$((i+1));</div><div>&nbsp; &nbsp; &nbsp; &nbsp; sleep 1;</div><div>&nbsp; &nbsp; &nbsp; done&nbsp; &nbsp; &nbsp;</div><div>&nbsp; &nbsp; volumeMounts:</div><div>&nbsp; &nbsp; - name: varlog</div><div>&nbsp; &nbsp; &nbsp; mountPath: /var/log</div><div>&nbsp; - name: count-log-1</div><div>&nbsp; &nbsp; image: busybox</div><div>&nbsp; &nbsp; args: [/bin/sh, -c, &apos;tail -n+1 -f /var/log/1.log&apos;]</div><div>&nbsp; &nbsp; volumeMounts:</div><div>&nbsp; &nbsp; - name: varlog</div><div>&nbsp; &nbsp; &nbsp; mountPath: /var/log</div><div>&nbsp; - name: count-log-2</div><div>&nbsp; &nbsp; image: busybox</div><div>&nbsp; &nbsp; args: [/bin/sh, -c, &apos;tail -n+1 -f /var/log/2.log&apos;]</div><div>&nbsp; &nbsp; volumeMounts:</div><div>&nbsp; &nbsp; - name: varlog</div><div>&nbsp; &nbsp; &nbsp; mountPath: /var/log</div><div>&nbsp; volumes:</div><div>&nbsp; - name: varlog</div><div>&nbsp; &nbsp; emptyDir: {}</div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div>-----</div><div><br/></div><div>apiVersion: v1</div><div>kind: Pod</div><div>metadata:</div><div>&nbsp; name: podname</div><div>spec:</div><div>&nbsp; containers:</div><div>&nbsp; - name: count</div><div>&nbsp; &nbsp; image: busybox</div><div>&nbsp; &nbsp; args:</div><div>&nbsp; &nbsp; - /bin/sh</div><div>&nbsp; &nbsp; - -c</div><div>&nbsp; &nbsp; - &gt;</div><div>&nbsp; &nbsp; &nbsp; i=0;</div><div>&nbsp; &nbsp; &nbsp; while true;</div><div>&nbsp; &nbsp; &nbsp; do</div><div>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;$(date) INFO $i&quot; &gt;&gt; /var/log/legacy-ap.log;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; i=$((i+1));</div><div>&nbsp; &nbsp; &nbsp; &nbsp; sleep 1;</div><div>&nbsp; &nbsp; &nbsp; done</div><div>&nbsp; &nbsp; volumeMounts:</div><div>&nbsp; &nbsp; - name: logs</div><div>&nbsp; &nbsp; &nbsp; mountPath: /var/log</div><div>&nbsp; - name: count-log-1</div><div>&nbsp; &nbsp; image: busybox</div><div>&nbsp; &nbsp; args: [/bin/sh, -c, &apos;tail -n+1 -f /var/log/legacy-ap.log&apos;]</div><div>&nbsp; &nbsp; volumeMounts:</div><div>&nbsp; &nbsp; - name: varlog</div><div>&nbsp; &nbsp; &nbsp; mountPath: /var/log</div><div>&nbsp; volumes:</div><div>&nbsp; - name: logs</div><div>&nbsp; &nbsp; emptyDir: {}</div><div><br/></div><div>#验证：</div><div>$ kubectl logs &lt;pod_name&gt; -c &lt;container_name&gt;</div></div><div><br/></div></en-note>]]></content><created>20210222T141711Z</created><updated>20210223T062631Z</updated><note-attributes><author>BurlyLuo</author></note-attributes></note><note><title>14.Log</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div>14.Log</div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>Task:</div><div>Monitor the logs of pods foobar and:</div><div>~ Extract logs lines corresponding to error unable-to-access-websit</div><div>~ Write them to /opt/KUTR00101/foorbar</div><div><br/></div><div><br/></div><div>kubectl config use-context xx</div></div><div><br/></div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>Answer:</div><div>kubectl logs foobar | grep unable-access-website &gt; /opt/KUTR00101/foobar</div><div>cat&nbsp;/opt/KUTR00101/foobar</div><div><br/></div></div><div><br/></div></en-note>]]></content><created>20210222T141408Z</created><updated>20210222T141701Z</updated><note-attributes><author>BurlyLuo</author></note-attributes></note><note><title>13.PVC</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div>13.PVC</div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>Create a new PersitentVolumeClaim:</div><div>~ Name: pv-volume</div><div>~ Class: csi-hostpath-sc</div><div>~ Capacity:10Mi</div><div><br/></div><div>Create a new Pod which mounts the PVC as a volume:</div><div>~ Name: web-server</div><div>~ Image: nginx</div><div>~ Mount path: /usr/share/nginx/html</div><div><br/></div><div>config the new pod to have ReadWriteOnce access on the volume.</div><div><br/></div><div><br/></div><div>Filnally, using kubectl edit or kubectl patch expand PVC to a capacity of 70Mi adn record the chandes</div><div><br/></div></div><div><br/></div><div><br/></div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>Answer:</div><div>1.创建pvc：</div><div>Refer &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<a href="https://v1-17.docs.kubernetes.io/docs/tasks/configure-pod-container/configure-persistent-volume-storage/">https://v1-17.docs.kubernetes.io/docs/tasks/configure-pod-container/configure-persistent-volume-storage/</a></div><div>pods/storage/pv-claim.yaml</div><div><br/></div><div>apiVersion: v1</div><div>kind: PersistentVolumeClaim</div><div>metadata:</div><div>&nbsp; name: pv-volume</div><div>spec:</div><div>&nbsp; storageClassName: csi-hostpath-sc</div><div>&nbsp; accessModes:</div><div>&nbsp; &nbsp; - ReadWriteOnce</div><div>&nbsp; resources:</div><div>&nbsp; &nbsp; requests:</div><div>&nbsp; &nbsp; &nbsp; storage: 10Mi</div><div><br/></div><div>2.创建Pod</div><div>pods/storage/pv-pod.yaml</div><div><br/></div><div>apiVersion: v1</div><div>kind: Pod</div><div>metadata:</div><div>&nbsp; name: web-server</div><div>spec:</div><div>&nbsp; volumes:</div><div>&nbsp; &nbsp; - name: task-pv-storage</div><div>&nbsp; &nbsp; &nbsp; persistentVolumeClaim:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; claimName: pv-volume</div><div>&nbsp; containers:</div><div>&nbsp; &nbsp; - name: nginx</div><div>&nbsp; &nbsp; &nbsp; image: nginx</div><div>&nbsp; &nbsp; &nbsp; ports:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; - containerPort: 80</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; name: &quot;http-server&quot;</div><div>&nbsp; &nbsp; &nbsp; volumeMounts:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; - mountPath: &quot;/usr/share/nginx/html&quot;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; name: task-pv-storage</div><div><br/></div><div>3.expand the PVC:</div><div>kubectl patch pvc pv-volume -p &apos;{&quot;spec&quot;:{&quot;resources&quot;:{&quot;requests&quot;:{&quot;storage&quot;:&quot;70Mi&quot;}}}}&apos; &nbsp;--record</div><div>kubectl edit &nbsp;pvc pv-volume --record</div><div><br/></div><div><br/></div><div><br/></div><div><br/></div></div><div><br/></div></en-note>]]></content><created>20210222T134349Z</created><updated>20210222T141353Z</updated><note-attributes><author>BurlyLuo</author></note-attributes></note><note><title>12.PV</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div>12.PV</div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>Task</div><div>Create a persistent volume with name app-config,of capcaity 2Gi and access nodes ReadWriteMany.The type volume is hostPath and it&apos;s location is /srv/app-config</div><div><br/></div><div>kubectl config use-context xx</div></div><div><br/></div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>Answer:</div><div>Refer &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<a href="https://v1-17.docs.kubernetes.io/docs/tasks/configure-pod-container/configure-persistent-volume-storage/">https://v1-17.docs.kubernetes.io/docs/tasks/configure-pod-container/configure-persistent-volume-storage/</a></div><div><br/></div><div>pods/storage/pv-volume.yaml</div><div><br/></div><div>apiVersion: v1</div><div>kind: PersistentVolume</div><div>metadata:</div><div>&nbsp; name: app-config</div><div>&nbsp; labels:</div><div>&nbsp; &nbsp; type: local</div><div>spec:</div><div>&nbsp; capacity:</div><div>&nbsp; &nbsp; storage: 2Gi</div><div>&nbsp; accessModes:</div><div>&nbsp; &nbsp; - ReadWriteMany</div><div>&nbsp; hostPath:</div><div>&nbsp; &nbsp; path: &quot;/srv/app-config&quot;</div><div><br/></div><div>controlplane $ kubectl apply -f dd.yaml</div><div>persistentvolume/app-config created</div><div>controlplane $ kubectl get pv</div><div>NAME&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;CAPACITY&nbsp; &nbsp;ACCESS MODES&nbsp; &nbsp;RECLAIM POLICY&nbsp; &nbsp;STATUS&nbsp; &nbsp; &nbsp; CLAIM&nbsp; &nbsp;STORAGECLASS&nbsp; &nbsp;REASON&nbsp; &nbsp;AGE</div><div>app-config&nbsp; &nbsp;2Gi&nbsp; &nbsp; &nbsp; &nbsp; RWX&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Retain&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Available&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;3s</div><div>controlplane $</div></div><div><br/></div></en-note>]]></content><created>20210222T133519Z</created><updated>20210222T133936Z</updated><note-attributes><author>BurlyLuo</author></note-attributes></note><note><title>11.Create Pod</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div>11.Create Pod</div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>Task:</div><div>Create a pod named kucc1 with a signal app container for each of the following images running inside(there may be between 1 and 4 images specified):nginx+redis+memcached+consul</div><div><br/></div><div>kubectl config use-context k8s</div><div><br/></div></div><div><br/></div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>kubectl run kucc1 --image=nginx --dry-run=client -o yaml &gt; kucc1.yaml</div><div>controlplane $ cat kucc1.yaml</div><div>apiVersion: v1</div><div>kind: Pod</div><div>metadata:</div><div>&nbsp; labels:</div><div>&nbsp; &nbsp; run: kucc1</div><div>&nbsp; name: kucc1</div><div>spec:</div><div>&nbsp; containers:</div><div>&nbsp; - image: nginx</div><div>&nbsp; &nbsp; name: nginx</div><div>&nbsp; - image: redis</div><div>&nbsp; &nbsp; name: redis</div><div>&nbsp; - image: memcached</div><div>&nbsp; &nbsp; name: memcached</div><div>&nbsp; - image: consul</div><div>&nbsp; &nbsp; name: consul</div><div><br/></div><div>controlplane $ kubectl get pods</div><div>NAME&nbsp; &nbsp; READY&nbsp; &nbsp;STATUS&nbsp; &nbsp; RESTARTS&nbsp; &nbsp;AGE</div><div>kucc1&nbsp; &nbsp;4/4&nbsp; &nbsp; &nbsp;Running&nbsp; &nbsp;0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 67s</div><div>controlplane $</div><div><br/></div><div><br/></div><div><br/></div></div><div><br/></div></en-note>]]></content><created>20210222T132817Z</created><updated>20210222T133423Z</updated><note-attributes><author>BurlyLuo</author></note-attributes></note><note><title>10.Node health</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div>10.Node health</div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>Task:</div><div>Check to see how many nodes are ready(not include nodes tainted NoSchedule) and write the numbers to /opt/KUSC00402/kusc00402.txt</div><div><br/></div><div>kubectl config use-context k8s</div><div><br/></div></div><div><br/></div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>Answer:</div><div>1.检查Node ready的个数</div><div>m=kubectl get nodes -o wide | grep -i ready|wc</div><div>n=kubectl describe nodes | grep -i taints| grep -i noschedule|wc</div><div>controlplane $ kubectl describe nodes | grep -i taints |grep -i noschedule|wc</div><div>Taints:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;node-role.kubernetes.io/master:NoSchedule</div><div>controlplane $</div><div>answer=m-n</div><div><br/></div><div>echo &quot;3&quot; &gt;&gt; /opt/KUSC00402/kusc00402.txt</div><div><br/></div></div><div><br/></div></en-note>]]></content><created>20210222T132034Z</created><updated>20210222T132745Z</updated><note-attributes><author>BurlyLuo</author></note-attributes></note><note><title>9.Scheduler</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div>9.Scheduler</div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>Task:</div><div>schedule a pod as follows:</div><div>~ name: nginx-kusc00401</div><div>~ image: nginx</div><div>~ Node Selector:disk=spinning</div><div><br/></div><div>kubectl config context xx</div></div><div><br/></div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>Answer:</div><div>kubectl run -h</div><div>Usage:</div><div>&nbsp; kubectl run NAME --image=image [--env=&quot;key=value&quot;] [--port=port] [--dry-run=server|client] [--overrides=inline-json]</div><div><br/></div><div><a href="https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/">https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/</a></div><div>kubectl run nginx-kusc00401 --image=nginx --dry-run=client -o yaml &gt; nginx-kusc00401.yaml</div><div>apiVersion: v1</div><div>kind: Pod</div><div>metadata:</div><div>&nbsp; labels:</div><div>&nbsp; &nbsp; run: nginx-kusc00401</div><div>&nbsp; name: nginx-kusc00401</div><div>spec:</div><div>&nbsp; containers:</div><div>&nbsp; - image: nginx</div><div>&nbsp; &nbsp; name: nginx-kusc00401</div><div>&nbsp; nodeSelector:</div><div>&nbsp; &nbsp; disk:&nbsp;spinning</div></div><div><br/></div></en-note>]]></content><created>20210222T130858Z</created><updated>20210222T131923Z</updated><note-attributes><author>BurlyLuo</author></note-attributes></note><note><title>8.Deployment</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div>8.Deployment</div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>Task:</div><div>Scale the deployment loadbalancer to 6 pods</div><div><br/></div><div>kubectl config use-context k8s</div><div><br/></div></div><div><br/></div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>Answer:</div><div>kubectl scale deploymnet -h</div><div>&nbsp; # If the deployment named mysql&apos;s current size is 2, scale mysql to 3.</div><div>&nbsp; kubectl scale --current-replicas=2 --replicas=3 deployment/mysql</div><div><br/></div><div>kubectl sacle deploy&nbsp;loadbalancer --replicas=6&nbsp;</div><div><br/></div><div>//注意：</div><div>Examples:</div><div>&nbsp; # Set a deployment&apos;s nginx container image to &apos;nginx:1.9.1&apos;, and its busybox container image to &apos;busybox&apos;.</div><div>&nbsp; kubectl set image deployment/nginx busybox=busybox nginx=nginx:1.9.1</div><div><br/></div><div><br/></div><div>controlplane $ kubectl rollout -h</div><div>Manage the rollout of a resource.</div><div><br/></div><div>&nbsp;Valid resource types include:</div><div><br/></div><div>&nbsp; *&nbsp; deployments</div><div>&nbsp; *&nbsp; daemonsets</div><div>&nbsp; *&nbsp; statefulsets</div><div><br/></div><div>Examples:</div><div>&nbsp; # Rollback to the previous deployment</div><div>&nbsp; kubectl rollout undo deployment/abc</div></div><div><br/></div></en-note>]]></content><created>20210222T125856Z</created><updated>20210222T130848Z</updated><note-attributes><author>BurlyLuo</author></note-attributes></note><note><title>7.Ingress</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div>7.Ingress</div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>Task:</div><div>Create a new Ingress resource as follows:</div><div>~ name: pong</div><div>~ Namespace: ing-internal</div><div>~ Exposing service hi on path /hi using service port 5677</div><div><br/></div><div>you can check use:</div><div>curl -kl &lt;INTERNAL_IP&gt;/hi</div><div><br/></div><div><br/></div><div>kubectl config use-context xx</div></div><div><br/></div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>Answer:</div><div>Refer:</div><div>https://v1-19.docs.kubernetes.io/zh/docs/concepts/services-networking/ingress/</div><div>apiVersion: networking.k8s.io/v1</div><div>kind: Ingress</div><div>metadata:</div><div>&nbsp; name: pong</div><div>&nbsp; namespace: ing-internal</div><div>&nbsp; annotations:</div><div>&nbsp; &nbsp; nginx.ingress.kubernetes.io/rewrite-target: /</div><div>spec:</div><div>&nbsp; rules:</div><div>&nbsp; - http:</div><div>&nbsp; &nbsp; &nbsp; paths:</div><div>&nbsp; &nbsp; &nbsp; - path: /hi</div><div>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;pathType: Prefix</div><div>&nbsp; &nbsp; &nbsp; &nbsp; backend:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; service:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; name: hi</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; port:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; number: 5678</div><div><br/></div><div><br/></div></div><div><br/></div></en-note>]]></content><created>20210222T124400Z</created><updated>20210222T125840Z</updated><note-attributes><author>BurlyLuo</author></note-attributes></note><note><title>6.Create SVC</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div>6.Create SVC</div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>Task:</div><div>Set context:</div><div>kubectl config use-context k8s</div><div><br/></div><div>Reconfig the existing deployment front-end and add a port specific named http exposeing pod 80/tcp of the existing container nginx&nbsp;</div><div>Create a new service named front-end-svc exposing the container port http</div><div><br/></div><div>Config the new service to also expose the indiviual pods via a NodePort on the nodes on which the are scheduled</div><div><br/></div><div><br/></div></div><div><br/></div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>演示：先创建一个deploy：front-end</div><div>controlplane $ kubectl get deploy</div><div>NAME&nbsp; &nbsp; &nbsp; &nbsp; READY&nbsp; &nbsp;UP-TO-DATE&nbsp; &nbsp;AVAILABLE&nbsp; &nbsp;AGE</div><div>front-end&nbsp; &nbsp;1/1&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;29s</div><div>1.然后再修改：[Reconfig the existing deployment front-end and add a port specific named http exposeing pod 80/tcp of the existing container nginx]</div><div>controlplane $ kubectl edit deploy front-end</div><div>deployment.apps/front-end edited</div><div>&nbsp; &nbsp; spec:</div><div>&nbsp; &nbsp; &nbsp; containers:</div><div>&nbsp; &nbsp; &nbsp; - image: nginx</div><div>&nbsp; &nbsp; &nbsp; &nbsp; imagePullPolicy: Always</div><div>&nbsp; &nbsp; &nbsp; &nbsp; name: nginx</div><div>&nbsp; &nbsp; &nbsp; &nbsp; ports:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; - containerPort: 80</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; name: http</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; protocol: TCP</div><div>2.暴露svc</div><div>kubectl expose -h</div><div>Usage:</div><div>kubectl expose (-f FILENAME | TYPE NAME) [--port=port] [--protocol=TCP|UDP|SCTP] [--target-port=number-or-name]&nbsp;[--name=name] [--external-ip=external-ip-of-service] [--type=type] [options]</div><div>kubectl expose deployment front-end --name=front-end-svc --port=80 --target-port=80 --type=NodePort</div><div><br/></div><div>3.验证：</div><div>kubectl get endpoints -o wide&nbsp;</div><div>controlplane $ kubectl get endpoints -o wide</div><div>NAME&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ENDPOINTS&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; AGE</div><div>front-end-svc&nbsp; &nbsp;10.244.1.5:80&nbsp; &nbsp; &nbsp; 73s</div><div>kubernetes&nbsp; &nbsp; &nbsp; 172.17.0.14:6443&nbsp; &nbsp;27m</div><div><br/></div><div>controlplane $ kubectl get pods -owide</div><div>NAME&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;READY&nbsp; &nbsp;STATUS&nbsp; &nbsp; RESTARTS&nbsp; &nbsp;AGE&nbsp; &nbsp; &nbsp;IP&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;NODE&nbsp; &nbsp; &nbsp;NOMINATED NODE&nbsp; &nbsp;READINESS GATES</div><div>front-end-7899dbb4cf-wdsf6&nbsp; &nbsp;1/1&nbsp; &nbsp; &nbsp;Running&nbsp; &nbsp;0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5m51s&nbsp; &nbsp;10.244.1.5&nbsp; &nbsp;node01&nbsp; &nbsp;&lt;none&gt;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;none&gt;</div><div>controlplane $</div><div><br/></div><div><br/></div><div>controlplane $ kubectl expose&nbsp; -h</div><div>Expose a resource as a new Kubernetes service.</div><div><br/></div><div>&nbsp;Looks up a deployment, service, replica set, replication controller or pod by name and uses the selector for that</div><div>resource as the selector for a new service on the specified port. A deployment or replica set will be exposed as a</div><div>service only if its selector is convertible to a selector that service supports, i.e. when the selector contains only</div><div>the matchLabels component. Note that if no port is specified via --port and the exposed resource has multiple ports, all</div><div>will be re-used by the new service. Also if no labels are specified, the new service will re-use the labels from the</div><div>resource it exposes.</div><div><br/></div><div>&nbsp;Possible resources include (case insensitive):</div><div><br/></div><div>&nbsp;pod (po), service (svc), replicationcontroller (rc), deployment (deploy), replicaset (rs)</div><div><br/></div><div>Examples:</div><div>&nbsp; # Create a service for a replicated nginx, which serves on port 80 and connects to the containers on port 8000.</div><div>&nbsp; kubectl expose rc nginx --port=80 --target-port=8000</div><div><br/></div><div>&nbsp; # Create a service for a replication controller identified by type and name specified in &quot;nginx-controller.yaml&quot;,</div><div>which serves on port 80 and connects to the containers on port 8000.</div><div>&nbsp; kubectl expose -f nginx-controller.yaml --port=80 --target-port=8000</div><div><br/></div><div>&nbsp; # Create a service for a pod valid-pod, which serves on port 444 with the name &quot;frontend&quot;</div><div>&nbsp; kubectl expose pod valid-pod --port=444 --name=frontend</div><div><br/></div><div>&nbsp; # Create a second service based on the above service, exposing the container port 8443 as port 443 with the name</div><div>&quot;nginx-https&quot;</div><div>&nbsp; kubectl expose service nginx --port=443 --target-port=8443 --name=nginx-https</div><div><br/></div><div>&nbsp; # Create a service for a replicated streaming application on port 4100 balancing UDP traffic and named &apos;video-stream&apos;.</div><div>&nbsp; kubectl expose rc streamer --port=4100 --protocol=UDP --name=video-stream</div><div><br/></div><div>&nbsp; # Create a service for a replicated nginx using replica set, which serves on port 80 and connects to the containers on</div><div>port 8000.</div><div>&nbsp; kubectl expose rs nginx --port=80 --target-port=8000</div><div><br/></div><div>&nbsp; # Create a service for an nginx deployment, which serves on port 80 and connects to the containers on port 8000.</div><div>&nbsp; kubectl expose deployment nginx --port=80 --target-port=8000</div><div><br/></div><div>Options:</div><div>&nbsp; &nbsp; &nbsp; --allow-missing-template-keys=true: If true, ignore any errors in templates when a field or map key is missing in</div><div>the template. Only applies to golang and jsonpath output formats.</div><div>&nbsp; &nbsp; &nbsp; --cluster-ip=&apos;&apos;: ClusterIP to be assigned to the service. Leave empty to auto-allocate, or set to &apos;None&apos; to create</div><div>a headless service.</div><div>&nbsp; &nbsp; &nbsp; --dry-run=&apos;none&apos;: Must be &quot;none&quot;, &quot;server&quot;, or &quot;client&quot;. If client strategy, only print the object that would be</div><div>sent, without sending it. If server strategy, submit server-side request without persisting the resource.</div><div>&nbsp; &nbsp; &nbsp; --external-ip=&apos;&apos;: Additional external IP address (not managed by Kubernetes) to accept for the service. If this IP</div><div>is routed to a node, the service can be accessed by this IP in addition to its generated service IP.</div><div>&nbsp; -f, --filename=[]: Filename, directory, or URL to files identifying the resource to expose a service</div><div>&nbsp; &nbsp; &nbsp; --generator=&apos;service/v2&apos;: The name of the API generator to use. There are 2 generators: &apos;service/v1&apos; and</div><div>&apos;service/v2&apos;. The only difference between them is that service port in v1 is named &apos;default&apos;, while it is left unnamed</div><div>in v2. Default is &apos;service/v2&apos;.</div><div>&nbsp; -k, --kustomize=&apos;&apos;: Process the kustomization directory. This flag can&apos;t be used together with -f or -R.</div><div>&nbsp; -l, --labels=&apos;&apos;: Labels to apply to the service created by this call.</div><div>&nbsp; &nbsp; &nbsp; --load-balancer-ip=&apos;&apos;: IP to assign to the LoadBalancer. If empty, an ephemeral IP will be created and used</div><div>(cloud-provider specific).</div><div>&nbsp; &nbsp; &nbsp; --name=&apos;&apos;: The name for the newly created object.</div><div>&nbsp; -o, --output=&apos;&apos;: Output format. One of:</div><div>json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-file.</div><div>&nbsp; &nbsp; &nbsp; --overrides=&apos;&apos;: An inline JSON override for the generated object. If this is non-empty, it is used to override the</div><div>generated object. Requires that the object supply a valid apiVersion field.</div><div>&nbsp; &nbsp; &nbsp; --port=&apos;&apos;: The port that the service should serve on. Copied from the resource being exposed, if unspecified</div><div>&nbsp; &nbsp; &nbsp; --protocol=&apos;&apos;: The network protocol for the service to be created. Default is &apos;TCP&apos;.</div><div>&nbsp; &nbsp; &nbsp; --record=false: Record current kubectl command in the resource annotation. If set to false, do not record the</div><div>command. If set to true, record the command. If not set, default to updating the existing annotation value only if one</div><div>already exists.</div><div>&nbsp; -R, --recursive=false: Process the directory used in -f, --filename recursively. Useful when you want to manage</div><div>related manifests organized within the same directory.</div><div>&nbsp; &nbsp; &nbsp; --save-config=false: If true, the configuration of current object will be saved in its annotation. Otherwise, the</div><div>annotation will be unchanged. This flag is useful when you want to perform kubectl apply on this object in the future.</div><div>&nbsp; &nbsp; &nbsp; --selector=&apos;&apos;: A label selector to use for this service. Only equality-based selector requirements are supported.</div><div>If empty (the default) infer the selector from the replication controller or replica set.)</div><div>&nbsp; &nbsp; &nbsp; --session-affinity=&apos;&apos;: If non-empty, set the session affinity for the service to this; legal values: &apos;None&apos;,</div><div>&apos;ClientIP&apos;</div><div>&nbsp; &nbsp; &nbsp; --target-port=&apos;&apos;: Name or number for the port on the container that the service should direct traffic to.</div><div>Optional.</div><div>&nbsp; &nbsp; &nbsp; --template=&apos;&apos;: Template string or path to template file to use when -o=go-template, -o=go-template-file. The</div><div>template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].</div><div>&nbsp; &nbsp; &nbsp; --type=&apos;&apos;: Type for this service: ClusterIP, NodePort, LoadBalancer, or ExternalName. Default is &apos;ClusterIP&apos;.</div><div><br/></div><div>Usage:</div><div>&nbsp; kubectl expose (-f FILENAME | TYPE NAME) [--port=port] [--protocol=TCP|UDP|SCTP] [--target-port=number-or-name]</div><div>[--name=name] [--external-ip=external-ip-of-service] [--type=type] [options]</div><div><br/></div><div>Use &quot;kubectl options&quot; for a list of global command-line options (applies to all commands).</div><div>controlplane $</div></div><div><br/></div></en-note>]]></content><created>20210221T134249Z</created><updated>20210222T124616Z</updated><note-attributes><author>BurlyLuo</author></note-attributes></note><note><title>5.Network Policy</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div>5.Network Policy</div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>Task:</div><div>Set configuration context:</div><div>kubectl config use-context hk8s</div><div><br/></div><div>Create a new NetwrokPolicy named allow-port-from-namespace that allows Pods in the existing namespace internal to connect to the port 9000 of other Pods in the same namespace</div><div><br/></div><div>Ensure that the new NetworkPolicy</div><div>~ dose not allow access to Pods not listening on port 9000</div><div>~ dose not allow access from Pods not int the namespace internal</div><div><br/></div><div><br/></div><div><br/></div><div><span style="color: rgb(227, 0, 0);"><b>Another Case:</b></span></div><div>Create a new NetworkPolicy named allow-port-from-namespace that allow Pods &nbsp;int the existing namespace corp-bar to connect to the port 9000 of other pods in the ns foobar</div><div><br/></div></div><div><br/></div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>Demo：</div><div>apiVersion: networking.k8s.io/v1</div><div>kind: NetworkPolicy</div><div>metadata:</div><div>&nbsp; name: test-network-policy</div><div>&nbsp; namespace: default</div><div>spec:</div><div>&nbsp; podSelector: &nbsp; &nbsp; &nbsp; &nbsp;<b>//每个 NetworkPolicy 都包括一个 podSelector，它对该策略所 适用的一组 Pod 进行选择。示例中的策略选择带有 &quot;role=db&quot; 标签的 Pod。 空的 podSelector 选择名字空间下的所有 Pod。</b></div><div>&nbsp; &nbsp; matchLabels: &nbsp; &nbsp; &nbsp;<b>//&nbsp;kubectl explain networkpolicy.spec.podSelector.matchLabels &nbsp;matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</b></div><div>&nbsp; &nbsp; &nbsp; role: db</div><div>&nbsp; policyTypes: &nbsp; &nbsp; &nbsp;<b>//&nbsp;policyTypes: 每个 NetworkPolicy 都包含一个 policyTypes 列表，其中包含 Ingress 或 Egress 或两者兼具。policyTypes 字段表示给定的策略是应用于 进入所选 Pod 的入站流量还是来自所选 Pod 的出站流量，或两者兼有。 如果 NetworkPolicy 未指定policyTypes 则默认情况下始终设置 Ingress； 如果 NetworkPolicy 有任何出口规则的话则设置 Egress。</b></div><div>&nbsp; - Ingress &nbsp; &nbsp; &nbsp; //<b>ingress: 每个 NetworkPolicy 可包含一个 ingress 规则的白名单列表。 每个规则都允许同时匹配 from 和 ports 部分的流量。示例策略中包含一条 简单的规则： 它匹配某个特定端口，来自三个来源中的一个，第一个通过 ipBlock 指定，第二个通过 namespaceSelector 指定，第三个通过 podSelector 指定。</b></div><div>&nbsp; - Egress &nbsp; &nbsp; &nbsp; &nbsp;<b>//egress: 每个 NetworkPolicy 可包含一个 egress 规则的白名单列表。 每个规则都允许匹配 to 和 port 部分的流量。该示例策略包含一条规则， 该规则将指定端口上的流量匹配到 10.0.0.0/24 中的任何目的地。</b></div><div>&nbsp; ingress:</div><div>&nbsp; - from:</div><div>&nbsp; &nbsp; - ipBlock:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; cidr: 172.17.0.0/16</div><div>&nbsp; &nbsp; &nbsp; &nbsp; except:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; - 172.17.1.0/24</div><div>&nbsp; &nbsp; - namespaceSelector:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; matchLabels:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; project: myproject</div><div>&nbsp; &nbsp; - podSelector:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; matchLabels:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; role: frontend</div><div>&nbsp; &nbsp; ports:</div><div>&nbsp; &nbsp; - protocol: TCP</div><div>&nbsp; &nbsp; &nbsp; port: 6379</div><div>&nbsp; egress:</div><div>&nbsp; - to:</div><div>&nbsp; &nbsp; - ipBlock:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; cidr: 10.0.0.0/24</div><div>&nbsp; &nbsp; ports:</div><div>&nbsp; &nbsp; - protocol: TCP</div><div>&nbsp; &nbsp; &nbsp; port: 5978</div><div><br/></div><div><br/></div><div><b>///Answer:</b></div><div>apiVersion: networking.k8s.io/v1</div><div>kind: NetworkPolicy</div><div>metadata:</div><div>&nbsp; name: all-port-from-namespace</div><div>&nbsp; namespace: internal</div><div>spec:</div><div>&nbsp; podSelector: {}</div><div>&nbsp; policyType:</div><div>&nbsp; - Ingress</div><div>&nbsp; ingress:</div><div>&nbsp; - from:</div><div>&nbsp; &nbsp; - podSelector: {}</div><div>&nbsp; &nbsp; ports:</div><div>&nbsp; &nbsp; - port: 9000</div><div><br/></div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div></div><div><br/></div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>首先查看ns的label：kubectl get ns --show-labels</div><div><br/></div><div>apiVersion: networking.k8s.io/v1</div><div>kind: NetworkPolicy</div><div>metadata:</div><div>&nbsp; name: all-port-from-namespace</div><div>&nbsp; namespace: foobar</div><div>spec:</div><div>&nbsp; podSelector: {}</div><div>&nbsp; policyType:</div><div>&nbsp; - Ingress</div><div>&nbsp; ingress:</div><div>&nbsp; - from:</div><div>&nbsp; &nbsp; - namespaceSelector:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; matchLabels:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; project: corp-bar</div><div>&nbsp; &nbsp; ports:</div><div>&nbsp; &nbsp; - port: 9000</div></div><div><br/></div></en-note>]]></content><created>20210221T125242Z</created><updated>20210221T134244Z</updated><note-attributes><author>BurlyLuo</author><source-url>https://kubernetes.io/zh/docs/concepts/services-networking/network-policies/</source-url></note-attributes></note><note><title>4.ETCD Backup and Restore</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div>4.ETCD Backup and Restore</div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>Task：</div><div>No configuration context change tequired for this item</div><div><br/></div><div>First, create a snapshot of the existing etcd instance running at https://127.0.0.1:2379,saving the snapshot to /srv/data/etcd-snapshot.db</div><div>Note:</div><div>Creating a snapshot of the given instance is expected to complete in seconds.</div><div>if the operation seens to hang,something&apos;s like wrong with your command.Use CTRL+c to cannel the operation and try again.</div><div><br/></div><div>Next,restore an existing,previous snapshot located at /var/lib/backup/etcd-snapshot-previous.db</div><div><br/></div><div>The following TLS certificates/key are suppied for connecting to the server tieh etcdctl:</div><div>CA certificate:/opt/KUIN00601/ca.crt</div><div>Client certificate:/opt/KUIN00601/etcd-client.crt</div><div>Cilent Key:/opt/KUIN00601/etcd-client.key</div><div><br/></div><div>&nbsp;</div></div><div><br/></div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>使用帮助：</div><div># ETCDCTL_API=3&nbsp; etcdctl</div><div>NAME:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; etcdctl - A simple command line client for etcd3.</div><div><br/></div><div>USAGE:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; etcdctl [flags]</div><div><br/></div><div>VERSION:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; 3.4.3</div><div><br/></div><div>API VERSION:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; 3.4</div><div><br/></div><div><br/></div><div>COMMANDS:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; alarm disarm&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Disarms all alarms</div><div>&nbsp; &nbsp; &nbsp; &nbsp; alarm list&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Lists all alarms</div><div>&nbsp; &nbsp; &nbsp; &nbsp; auth disable&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Disables authentication</div><div>&nbsp; &nbsp; &nbsp; &nbsp; auth enable&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Enables authentication</div><div>&nbsp; &nbsp; &nbsp; &nbsp; check datascale&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Check the memory usage of holding data for different workloads on a given server endpoint.</div><div>&nbsp; &nbsp; &nbsp; &nbsp; check perf&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Check the performance of the etcd cluster</div><div>&nbsp; &nbsp; &nbsp; &nbsp; compaction&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Compacts the event history in etcd</div><div>&nbsp; &nbsp; &nbsp; &nbsp; defrag&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Defragments the storage of the etcd members with given endpoints</div><div>&nbsp; &nbsp; &nbsp; &nbsp; del&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Removes the specified key or range of keys [key, range_end)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; elect&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Observes and participates in leader election</div><div>&nbsp; &nbsp; &nbsp; &nbsp; endpoint hashkv&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Prints the KV history hash for each endpoint in --endpoints</div><div>&nbsp; &nbsp; &nbsp; &nbsp; endpoint health&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Checks the healthiness of endpoints specified in `--endpoints` flag</div><div>&nbsp; &nbsp; &nbsp; &nbsp; endpoint status&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Prints out the status of endpoints specified in `--endpoints` flag</div><div>&nbsp; &nbsp; &nbsp; &nbsp; get&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Gets the key or a range of keys</div><div>&nbsp; &nbsp; &nbsp; &nbsp; help&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Help about any command</div><div>&nbsp; &nbsp; &nbsp; &nbsp; lease grant&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Creates leases</div><div>&nbsp; &nbsp; &nbsp; &nbsp; lease keep-alive&nbsp; &nbsp; &nbsp; &nbsp; Keeps leases alive (renew)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; lease list&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; List all active leases</div><div>&nbsp; &nbsp; &nbsp; &nbsp; lease revoke&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Revokes leases</div><div>&nbsp; &nbsp; &nbsp; &nbsp; lease timetolive&nbsp; &nbsp; &nbsp; &nbsp; Get lease information</div><div>&nbsp; &nbsp; &nbsp; &nbsp; lock&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Acquires a named lock</div><div>&nbsp; &nbsp; &nbsp; &nbsp; make-mirror&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Makes a mirror at the destination etcd cluster</div><div>&nbsp; &nbsp; &nbsp; &nbsp; member add&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Adds a member into the cluster</div><div>&nbsp; &nbsp; &nbsp; &nbsp; member list&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Lists all members in the cluster</div><div>&nbsp; &nbsp; &nbsp; &nbsp; member promote&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Promotes a non-voting member in the cluster</div><div>&nbsp; &nbsp; &nbsp; &nbsp; member remove&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Removes a member from the cluster</div><div>&nbsp; &nbsp; &nbsp; &nbsp; member update&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Updates a member in the cluster</div><div>&nbsp; &nbsp; &nbsp; &nbsp; migrate&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Migrates keys in a v2 store to a mvcc store</div><div>&nbsp; &nbsp; &nbsp; &nbsp; move-leader&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Transfers leadership to another etcd cluster member.</div><div>&nbsp; &nbsp; &nbsp; &nbsp; put&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Puts the given key into the store</div><div>&nbsp; &nbsp; &nbsp; &nbsp; role add&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Adds a new role</div><div>&nbsp; &nbsp; &nbsp; &nbsp; role delete&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Deletes a role</div><div>&nbsp; &nbsp; &nbsp; &nbsp; role get&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Gets detailed information of a role</div><div>&nbsp; &nbsp; &nbsp; &nbsp; role grant-permission&nbsp; &nbsp;Grants a key to a role</div><div>&nbsp; &nbsp; &nbsp; &nbsp; role list&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Lists all roles</div><div>&nbsp; &nbsp; &nbsp; &nbsp; role revoke-permission&nbsp; Revokes a key from a role</div><div><b>&nbsp; &nbsp; &nbsp; &nbsp; snapshot restore&nbsp; &nbsp; &nbsp; &nbsp; Restores an etcd member snapshot to an etcd directory</b></div><div><b>&nbsp; &nbsp; &nbsp; &nbsp; snapshot save&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Stores an etcd node backend snapshot to a given file</b></div><div><b>&nbsp; &nbsp; &nbsp; &nbsp; snapshot status&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Gets backend snapshot status of a given file</b></div><div>&nbsp; &nbsp; &nbsp; &nbsp; txn&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Txn processes all the requests in one transaction</div><div>&nbsp; &nbsp; &nbsp; &nbsp; user add&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Adds a new user</div><div>&nbsp; &nbsp; &nbsp; &nbsp; user delete&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Deletes a user</div><div>&nbsp; &nbsp; &nbsp; &nbsp; user get&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Gets detailed information of a user</div><div>&nbsp; &nbsp; &nbsp; &nbsp; user grant-role&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Grants a role to a user</div><div>&nbsp; &nbsp; &nbsp; &nbsp; user list&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Lists all users</div><div>&nbsp; &nbsp; &nbsp; &nbsp; user passwd&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Changes password of user</div><div>&nbsp; &nbsp; &nbsp; &nbsp; user revoke-role&nbsp; &nbsp; &nbsp; &nbsp; Revokes a role from a user</div><div>&nbsp; &nbsp; &nbsp; &nbsp; version&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Prints the version of etcdctl</div><div>&nbsp; &nbsp; &nbsp; &nbsp; watch&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Watches events stream on keys or prefixes</div><div><br/></div><div>OPTIONS:</div><div>&nbsp; &nbsp; &nbsp; <b>--cacert=&quot;&quot;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;verify certificates of TLS-enabled secure servers using this CA bundle</b></div><div>&nbsp; &nbsp; &nbsp; <b>--cert=&quot;&quot;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;identify secure client using this TLS certificate file</b></div><div>&nbsp; &nbsp; &nbsp; --command-timeout=5s&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; timeout for short running command (excluding dial timeout)</div><div>&nbsp; &nbsp; &nbsp; --debug[=false]&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;enable client-side debug logging</div><div>&nbsp; &nbsp; &nbsp; --dial-timeout=2s&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;dial timeout for client connections</div><div>&nbsp; -d, --discovery-srv=&quot;&quot;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; domain name to query for SRV records describing cluster endpoints</div><div>&nbsp; &nbsp; &nbsp; --discovery-srv-name=&quot;&quot;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;service name to query when using DNS discovery</div><div>&nbsp; &nbsp; &nbsp; <b>--endpoints=[127.0.0.1:2379]&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gRPC endpoints</b></div><div>&nbsp; -h, --help[=false]&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; help for etcdctl</div><div>&nbsp; &nbsp; &nbsp; --hex[=false]&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;print byte strings as hex encoded strings</div><div>&nbsp; &nbsp; &nbsp; --insecure-discovery[=true]&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;accept insecure SRV records describing cluster endpoints</div><div>&nbsp; &nbsp; &nbsp; --insecure-skip-tls-verify[=false]&nbsp; &nbsp; &nbsp; &nbsp; skip server certificate verification</div><div>&nbsp; &nbsp; &nbsp; --insecure-transport[=true]&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;disable transport security for client connections</div><div>&nbsp; &nbsp; &nbsp; --keepalive-time=2s&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;keepalive time for client connections</div><div>&nbsp; &nbsp; &nbsp; --keepalive-timeout=6s&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; keepalive timeout for client connections</div><div>&nbsp; &nbsp; &nbsp; <b>--key=&quot;&quot;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; identify secure client using this TLS key file</b></div><div>&nbsp; &nbsp; &nbsp; --password=&quot;&quot;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;password for authentication (if this option is used, --user option shouldn&apos;t include password)</div><div>&nbsp; &nbsp; &nbsp; --user=&quot;&quot;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;username[:password] for authentication (prompt if password is not supplied)</div><div>&nbsp; -w, --write-out=&quot;simple&quot;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; set the output format (fields, json, protobuf, simple, table)</div><div><br/></div><div>#</div><div><br/></div><div><br/></div><div>备份：</div><div>ETCDCTL_API=3&nbsp; etcdctl --endpoints=&quot;https://127.0.0.1:2379&quot; --cacert=/opt/KUIN000601/ca.crt --cert=/opt/KUIN000601/etcd-client.crt --key=/opt/KUIN000601/etcd-client.key&nbsp; snapshot save /etc/data/etcd-snapshot.db</div><div><br/></div><div><br/></div><div>还原：</div><div>ETCDCTL_API=3&nbsp; etcdctl --endpoints=&quot;https://127.0.0.1:2379&quot; --cacert=/opt/KUIN000601/ca.crt --cert=/opt/KUIN000601/etcd-client.crt --key=/opt/KUIN000601/etcd-client.key&nbsp; snapshot restore /var/lib/backup/etcd-snapshot-previous.db</div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div></div><div><br/></div></en-note>]]></content><created>20210221T122833Z</created><updated>20210221T124727Z</updated><note-attributes><author>BurlyLuo</author></note-attributes></note><note><title>3.Upgrade Kubernetes Cluster</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div>3.Upgrade Kubernetes Cluster</div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>//第一部分：</div><div>Set configuration context：</div><div>kubectl config &nbsp;use-context mk8s</div><div>//第二部分</div><div>Task：</div><div>Given an exsiting kubernetes cluster running version 1.18.8. upgrade all of kubernetes control plane and node components on the master node only to version 1.19.0</div><div>You are also expected to upgrade kubelet and kubectl on the maste node.</div><div>// 第三部分</div><div>!Be sure to drain the master node before upgrading it and ucordon it after the upgrade.</div><div><span style="color: rgb(50, 135, 18);"><b>Do note upgrade the worker nodes,etcd.the container manager.the CNI plugin.the DNS service or any other addons</b></span></div><div><br/></div></div><div><br/></div><div><br/></div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>做题思路：</div><div>0.kubectl config &nbsp;use-context mk8s</div><div><br/></div><div>1.将master 设置为不可调度</div><div>kubectl cordon k8s-master</div><div>2.驱逐上边的Pod</div><div>kubectl drain k8s-master --delete-local-data --ignore-daemonsets --force &nbsp; <span style="color: rgb(255, 0, 0);"><b>//驱逐非常重要，不然coredns就被升级//</b></span></div><div>3.按要求升级组件。[需要ssh到对应的master节点上操作，切记]</div><div>先看看kubadm的具体版本：</div><div>apt-cache show kubeadm | grep 1.19.0</div><div>Version: 1.19.0-00</div><div>升级要求的二进制组件</div><div>apt-get install kubeadm=1.19.0-00 kubelet=1.19.0-00 kubectl=1.19.0-00</div><div>systemctl restart kubelet<br/></div><div>升级cluser-1.19.0</div><div>controlplane $ kubeadm upgrade apply -h</div><div>Upgrade your Kubernetes cluster to the specified version</div><div><br/></div><div>Usage:</div><div>&nbsp; <span style="color: rgb(255, 0, 0);"><b>kubeadm upgrade apply [version]</b></span></div><div><br/></div><div>Flags:</div><div>&nbsp; &nbsp; &nbsp; --allow-experimental-upgrades&nbsp; &nbsp; &nbsp; &nbsp; Show unstable versions of Kubernetes as an upgrade alternative and allow upgrading to an alpha/beta/release candidate versions of Kubernetes.</div><div>&nbsp; &nbsp; &nbsp; --allow-release-candidate-upgrades&nbsp; &nbsp;Show release candidate versions of Kubernetes as an upgrade alternative and allow upgrading to a release candidate versions of Kubernetes.</div><div>&nbsp; &nbsp; &nbsp; --certificate-renewal&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Perform the renewal of certificates used by component changed during upgrades. (default true)</div><div>&nbsp; &nbsp; &nbsp; --config string&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Path to a kubeadm configuration file.</div><div>&nbsp; &nbsp; &nbsp; --dry-run&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Do not change any state, just output what actions would be performed.</div><div>&nbsp; &nbsp; &nbsp; <b>--etcd-upgrade</b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Perform the upgrade of etcd. (default true)</div><div>&nbsp; -k, --experimental-kustomize string&nbsp; &nbsp; &nbsp; The path where kustomize patches for static pod manifests are stored.</div><div>&nbsp; &nbsp; &nbsp; --feature-gates string&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;A set of key=value pairs that describe feature gates for various features. Options are:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;IPv6DualStack=true|false (ALPHA - default=false)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;PublicKeysECDSA=true|false (ALPHA - default=false)</div><div>&nbsp; -f, --force&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Force upgrading although some requirements might not be met. This also implies non-interactive mode.</div><div>&nbsp; -h, --help&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;help for apply</div><div>&nbsp; &nbsp; &nbsp; --ignore-preflight-errors strings&nbsp; &nbsp; A list of checks whose errors will be shown as warnings. Example: &apos;IsPrivilegedUser,Swap&apos;. Value &apos;all&apos; ignores errors from all checks.</div><div>&nbsp; &nbsp; &nbsp; --image-pull-timeout duration&nbsp; &nbsp; &nbsp; &nbsp; The maximum amount of time to wait for the control plane pods to be downloaded. (default 15m0s)</div><div>&nbsp; &nbsp; &nbsp; --kubeconfig string&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; The kubeconfig file to use when talking to the cluster. If the flag is not set, a set of standard locations can be searched for an existing kubeconfig file. (default &quot;/etc/kubernetes/admin.conf&quot;)</div><div>&nbsp; &nbsp; &nbsp; --print-config&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Specifies whether the configuration file that will be used in the upgrade should be printed or not.</div><div>&nbsp; -y, --yes&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Perform the upgrade and do not prompt for confirmation (non-interactive mode).</div><div><br/></div><div>Global Flags:</div><div>&nbsp; &nbsp; &nbsp; --add-dir-header&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;If true, adds the file directory to the header</div><div>&nbsp; &nbsp; &nbsp; --log-file string&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; If non-empty, use this log file</div><div>&nbsp; &nbsp; &nbsp; --log-file-max-size uint&nbsp; &nbsp;Defines the maximum size a log file can grow to. Unit is megabytes. If the value is 0, the maximum file size is unlimited. (default 1800)</div><div>&nbsp; &nbsp; &nbsp; --rootfs string&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [EXPERIMENTAL] The path to the &apos;real&apos; host root filesystem.</div><div>&nbsp; &nbsp; &nbsp; --skip-headers&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;If true, avoid header prefixes in the log messages</div><div><br/></div><div>//etcd 不要升级</div><div>kubeadm upgrade apply 1.19.0&nbsp;--etcd-upgrade=false</div><div>controlplane $ kubeadm upgrade apply 1.19.0 --etcd-upgrade=false</div><div>[upgrade/config] Making sure the configuration is correct:</div><div>[upgrade/config] Reading configuration from the cluster...</div><div>[upgrade/config] FYI: You can look at this config file with &apos;kubectl -n kube-system get cm kubeadm-config -oyaml&apos;</div><div>[preflight] Running pre-flight checks.</div><div>[upgrade] Running cluster health checks</div><div>[upgrade/version] You have chosen to change the cluster version to &quot;v1.19.0&quot;</div><div>[upgrade/versions] Cluster version: v1.18.0</div><div>[upgrade/versions] kubeadm version: v1.19.0</div><div>[upgrade/confirm] Are you sure you want to proceed with the upgrade? [y/N]: y</div><div>[upgrade/prepull] Pulling images required for setting up a Kubernetes cluster</div><div>[upgrade/prepull] This might take a minute or two, depending on the speed of your internet connection</div><div>[upgrade/prepull] You can also perform this action in beforehand using &apos;kubeadm config images pull&apos;</div><div>[upgrade/apply] Upgrading your Static Pod-hosted control plane to version &quot;v1.19.0&quot;...</div><div>Static pod: kube-apiserver-controlplane hash: 6a9c5eb3762b72558cc2278bb0a373d1</div><div>Static pod: kube-controller-manager-controlplane hash: 60113c5cd7770e449c54dc42ca59c176</div><div>Static pod: kube-scheduler-controlplane hash: 74e2b561ea40b4f834f9854608d559d4</div><div>[upgrade/staticpods] Writing new Static Pod manifests to &quot;/etc/kubernetes/tmp/kubeadm-upgraded-manifests377527426&quot;</div><div>[upgrade/staticpods] Preparing for &quot;kube-apiserver&quot; upgrade</div><div>[upgrade/staticpods] Renewing apiserver certificate</div><div>[upgrade/staticpods] Renewing apiserver-kubelet-client certificate</div><div>[upgrade/staticpods] Renewing front-proxy-client certificate</div><div>[upgrade/staticpods] Renewing apiserver-etcd-client certificate</div><div>[upgrade/staticpods] Moved new manifest to &quot;/etc/kubernetes/manifests/kube-apiserver.yaml&quot; and backed up old manifest to &quot;/etc/kubernetes/tmp/kubeadm-backup-manifests-2021-02-21-11-50-19/kube-apiserver.yaml&quot;</div><div>[upgrade/staticpods] Waiting for the kubelet to restart the component</div><div>[upgrade/staticpods] This might take a minute or longer depending on the component/version gap (timeout 5m0s)</div><div>Static pod: kube-apiserver-controlplane hash: 6a9c5eb3762b72558cc2278bb0a373d1</div><div>Static pod: kube-apiserver-controlplane hash: 6a9c5eb3762b72558cc2278bb0a373d1</div><div>Static pod: kube-apiserver-controlplane hash: 83d1a5e956290c7ceb42c2826b846c22</div><div>[apiclient] Found 1 Pods for label selector component=kube-apiserver</div><div>[upgrade/staticpods] Component &quot;kube-apiserver&quot; upgraded successfully!</div><div>[upgrade/staticpods] Preparing for &quot;kube-controller-manager&quot; upgrade</div><div>[upgrade/staticpods] Renewing controller-manager.conf certificate</div><div>[upgrade/staticpods] Moved new manifest to &quot;/etc/kubernetes/manifests/kube-controller-manager.yaml&quot; and backed up old manifest to &quot;/etc/kubernetes/tmp/kubeadm-backup-manifests-2021-02-21-11-50-19/kube-controller-manager.yaml&quot;</div><div>[upgrade/staticpods] Waiting for the kubelet to restart the component</div><div>[upgrade/staticpods] This might take a minute or longer depending on the component/version gap (timeout 5m0s)</div><div>Static pod: kube-controller-manager-controlplane hash: 60113c5cd7770e449c54dc42ca59c176</div><div>Static pod: kube-controller-manager-controlplane hash: f6a9bf2865b2fe580f39f07ed872106b</div><div>[apiclient] Found 1 Pods for label selector component=kube-controller-manager</div><div>[upgrade/staticpods] Component &quot;kube-controller-manager&quot; upgraded successfully!</div><div>[upgrade/staticpods] Preparing for &quot;kube-scheduler&quot; upgrade</div><div>[upgrade/staticpods] Renewing scheduler.conf certificate</div><div>[upgrade/staticpods] Moved new manifest to &quot;/etc/kubernetes/manifests/kube-scheduler.yaml&quot; and backed up old manifest to &quot;/etc/kubernetes/tmp/kubeadm-backup-manifests-2021-02-21-11-50-19/kube-scheduler.yaml&quot;</div><div>[upgrade/staticpods] Waiting for the kubelet to restart the component</div><div>[upgrade/staticpods] This might take a minute or longer depending on the component/version gap (timeout 5m0s)</div><div>Static pod: kube-scheduler-controlplane hash: 74e2b561ea40b4f834f9854608d559d4</div><div>Static pod: kube-scheduler-controlplane hash: 5146743ebb284c11f03dc85146799d8b</div><div>[apiclient] Found 1 Pods for label selector component=kube-scheduler</div><div>[upgrade/staticpods] Component &quot;kube-scheduler&quot; upgraded successfully!</div><div>[upload-config] Storing the configuration used in ConfigMap &quot;kubeadm-config&quot; in the &quot;kube-system&quot; Namespace</div><div>[kubelet] Creating a ConfigMap &quot;kubelet-config-1.19&quot; in namespace kube-system with the configuration for the kubelets in the cluster</div><div>[kubelet-start] Writing kubelet configuration to file &quot;/var/lib/kubelet/config.yaml&quot;</div><div>[bootstrap-token] configured RBAC rules to allow Node Bootstrap tokens to get nodes</div><div>[bootstrap-token] configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials</div><div>[bootstrap-token] configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token</div><div>[bootstrap-token] configured RBAC rules to allow certificate rotation for all node client certificates in the cluster</div><div>[addons] Applied essential addon: CoreDNS</div><div>[addons] Applied essential addon: kube-proxy</div><div><br/></div><div>[upgrade/successful] SUCCESS! Your cluster was upgraded to &quot;v1.19.0&quot;. Enjoy!</div><div><br/></div><div>[upgrade/kubelet] Now that your control plane is upgraded, please proceed with upgrading your kubelets if you haven&apos;t already done so.</div><div>controlplane $</div><div>controlplane $</div><div>controlplane $ kubectl get nodes -o wide</div><div>NAME&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;STATUS&nbsp; &nbsp;ROLES&nbsp; &nbsp; AGE&nbsp; &nbsp;VERSION&nbsp; &nbsp;INTERNAL-IP&nbsp; &nbsp;EXTERNAL-IP&nbsp; &nbsp;OS-IMAGE&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;KERNEL-VERSION&nbsp; &nbsp; &nbsp; &nbsp;CONTAINER-RUNTIME</div><div>controlplane&nbsp; &nbsp;Ready&nbsp; &nbsp; master&nbsp; &nbsp;30m&nbsp; &nbsp;v1.19.0&nbsp; &nbsp;172.17.0.8&nbsp; &nbsp; &lt;none&gt;&nbsp; &nbsp; &nbsp; &nbsp; Ubuntu 18.04.5 LTS&nbsp; &nbsp;4.15.0-122-generic&nbsp; &nbsp;docker://19.3.13</div><div>node01&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Ready&nbsp; &nbsp; &lt;none&gt;&nbsp; &nbsp;30m&nbsp; &nbsp;v1.18.0&nbsp; &nbsp;172.17.0.10&nbsp; &nbsp;&lt;none&gt;&nbsp; &nbsp; &nbsp; &nbsp; Ubuntu 18.04.5 LTS&nbsp; &nbsp;4.15.0-122-generic&nbsp; &nbsp;docker://19.3.13</div><div>controlplane $</div><div>5.ucordon it after the upgrade.</div><div>kubectl uncordon controlplane</div><div><br/></div><div>//过程：</div><div>kubectl drain controlplane --delete-local-data --ignore-daemonsets --force</div><div>apt-get -y install kubeadm=1.19.0-00 kubelet=1.19.0-00 kubectl=1.19.0-00</div><div>systemctl restart kubelet<br/></div><div>kubeadm upgrade apply 1.19.0 --etcd-upgrade=false</div><div>kubectl get pods -o wide -A</div><div>kubectl get pods coredns-66bff467f8-kpfjg -o yaml -nkube-system | grep image</div><div>kubectl uncordon controlplane&nbsp;</div><div><br/></div><div><br/></div></div><div><br/></div></en-note>]]></content><created>20210218T153417Z</created><updated>20210221T122723Z</updated><note-attributes><author>BurlyLuo</author></note-attributes></note><note><title>2.Node Managent</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div>2.Node Managent&nbsp;</div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>Task：</div><div>Set the node named ek8s-node-1 as unavailable and reschedule &nbsp;all the pods running on it.</div><div><br/></div></div><div><br/></div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>做题思路：&nbsp;</div><div>----</div><div><span style="color: rgb(50, 135, 18);">第一步：reschedule all pods running on it.</span></div><div>drain&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Drain node in preparation for maintenance</div><div>[root@cka-1 ~]# kubectl drain -h &nbsp;<span style="color: rgb(50, 135, 18);">//先查看帮助</span></div><div>--delete-local-data=false: Continue even if there are pods using emptyDir (local data that will be deleted when &nbsp;the node is drained).</div><div>--ignore-daemonsets=false: Ignore DaemonSet-managed pods.</div><div>--force=false: Continue even if there are pods not managed by a ReplicationController, ReplicaSet, Job, DaemonSet &nbsp;or StatefulSet.</div><div><br/></div><div>controlplane $ kubectl drain node01&nbsp; --force --delete-local-data --ignore-daemonsets</div><div>node/node01 cordoned &nbsp; //它是先做的crondon。所以不需要做crondon了。</div><div>WARNING: ignoring DaemonSet-managed Pods: default/cnitest-hfwp7, kube-system/kube-flannel-ds-amd64-jqkdl, kube-system/kube-keepalived-vip-qjkjj, kube-system/kube-proxy-djpmr</div><div>evicting pod kube-system/katacoda-cloud-provider-58f89f7d9-lhqp6</div><div>pod/katacoda-cloud-provider-58f89f7d9-lhqp6 evicted</div><div>node/node01 evicted</div><div><br/></div><div><br/></div></div><div><br/></div></en-note>]]></content><created>20210218T144827Z</created><updated>20210218T153313Z</updated><note-attributes><author>BurlyLuo</author></note-attributes></note><note><title>2.RBAC</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div>2.RBAC&nbsp;</div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>Task：</div><div>----</div><div><span style="color: rgb(50, 135, 18);">第一部分：//创建一个名字叫做deployment-clusterrole 的clusterrole。</span></div><div>Create a &nbsp;new ClusterRole named deployment-clusterrole.</div><div>which only allows to <span style="color: rgb(255, 0, 0);"><b>create</b></span> the following resource types:</div><div>~ Deployment</div><div>~ StatefuSet</div><div>~ DaemonSet</div><div>----</div><div><span style="color: rgb(50, 135, 18);">第二部分：//创建SA，如果ns不存在，就先创建ns。</span></div><div>Create a new ServiceAccount named cicd-token in the exiting namespace app-team1.</div><div>----</div><div><span style="color: rgb(50, 135, 18);">第三部分：// 名称空间级别的limit，所以需要指定对应的ns，就是用rolebinding[ClusterRoleBinding是全局绑定]</span></div><div>Bind the new ClusterRole deployment-clusterole to the new ServieAccount cicd-tiken.<span style="color: rgb(255, 0, 0);"><b>limited to the namespace app-team1</b></span>.</div><div><br/></div><div>------</div><div>中文翻译：</div><div>1.创建一个名为deployment-clusterrole的clusterrole,并且对该clusterrole只绑定对Deployment，Daemonset,Statefulset的<span style="color: rgb(255, 0, 0);"><b>创建</b></span>权限</div><div>2.在指定namespace app-team1创建一个名为cicd-token的serviceaccount，并且将上一步创建clusterrole和该serviceaccount绑定</div></div><div><br/></div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div><span style="color: rgb(255, 0, 0);"><b>做题思路：</b></span></div><div>Answer:</div><div>kubectl config use-context ek8s</div><div><span style="color: rgb(255, 0, 0);">1. 由于ClusterRole是标准的Kubernetes的资源，所以可以直接使用CLI创建：</span></div><div>kubectl create clusterrole&nbsp;deployment-clusterrole&nbsp;--verb=create --resource=deployments,daemonsets,statefulsets --dry-run=client -o yaml &gt;clusterrole.yaml</div><div>//资源类型要注意加s，比如deployment<span style="color: rgb(255, 0, 0);">s</span></div><div>Usage:</div><div>&nbsp; kubectl create clusterrole NAME --verb=verb --resource=resource.group [--resource-name=resourcename][--dry-run=server|client|none] [options]</div><div>--resource=[]: Resource that the rule applies to.</div><div><br/></div><div>---</div><div>apiVersion: rbac.authorization.k8s.io/v1</div><div>kind: ClusterRole</div><div>metadata:</div><div>&nbsp; name: deployment-clusterrole</div><div>rules:</div><div>- apiGroups:</div><div>&nbsp; - apps</div><div>&nbsp; resources:</div><div>&nbsp; - deployments</div><div>&nbsp; - daemonsets</div><div>&nbsp; - statefulsets</div><div>&nbsp; verbs:</div><div>&nbsp; - create</div><div><br/></div><div>---</div><div><span style="color: rgb(255, 0, 0);">2.创建sa<b>：</b></span></div><div>kubectl create ns app-team1</div><div>kubectl&nbsp; -n app-team1 create serviceaccount cicd-token</div><div><br/></div><div><span style="color: rgb(255, 0, 0);">3.创建serviceaccount 和 clusterrole的绑定关系：</span></div><div>~~ kubectl create rolebinding NAME --clusterrole=NAME|--role=NAME [--user=username] [--group=groupname][--serviceaccount=namespace:serviceaccountname] [--dry-run=server|client|none] [options]</div><div>kubectl create rolebinding deployment-rolebinding --clusterrole=deployment-clusterrole&nbsp;--serviceaccount=app-team1:cicd-token -n=app-team1 --dry-run=client -o yaml</div><div>apiVersion: rbac.authorization.k8s.io/v1</div><div>kind: RoleBinding</div><div>metadata:</div><div>&nbsp; creationTimestamp: null</div><div>&nbsp; name: deployment-rolebinding</div><div>&nbsp; namespace: app-team1</div><div>roleRef:</div><div>&nbsp; apiGroup: rbac.authorization.k8s.io</div><div>&nbsp; kind: ClusterRole</div><div>&nbsp; name: clusterroletest</div><div>subjects:</div><div>- kind: ServiceAccount</div><div>&nbsp; name: cicd-token</div><div>&nbsp; namespace: app-team1</div><div>#</div></div><div><br/></div></en-note>]]></content><created>20210218T140819Z</created><updated>20210218T144449Z</updated><note-attributes><author>BurlyLuo</author></note-attributes></note><note><title>1.考试注意事项</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div>1.考试注意事项</div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>CKA从2020年九月份开始采用新的题型，考察的Kubernetes版本从1.18变为1.19，考题也随着版本发送了巨大的变化。</div><div>1.移除了安全相关的考题，会有单独的认证（CKS，据说在2020年11月份开始上线）</div><div>2.比较以往考点，新增了以下内容</div><div>2.1加入了NetworkPolicy的配置</div><div>2.2ingress的创建，以及ingressContriller的使用</div><div>2.3RBAC的创建和使用</div><div>2.4集群的升级，ETCD备份和还原</div><div>2.5sideCar container的使用</div><div>2.6storageClass的使用</div><div>3.时间从三小时缩减成二小时，题目有24题变成了17题，及格线从74分缩减成66分</div><div>&nbsp;注意点：</div><div>&nbsp; 1 最好有签证，没有的话使用身份证和带英文名字的证件即可，比如驾照翻译件。</div><div>&nbsp; 2 考试时的环境不能使用右键复制，mac 是原先的复制黏贴键，windows 是使用ctrl+insert</div><div>&nbsp; 和shift+insert，windows 笔记本一定要带外接键盘，不然按insert 有点麻烦，考试模拟的时</div><div>&nbsp; 候，记得熟悉这样的复制黏贴操作。</div><div>&nbsp; 3 考试时每次做题目前，记得看看是不是需要切换上下文环境，考试会给相应命令，需要的</div><div>&nbsp; 话，不要忘记切换，考试有好几个集群，上下文切换会转到不同的集群。注意要关注是否处</div><div>&nbsp; 在跳板机，某个集群某个node 的普通用户还是特殊用户，退出到跳板机使用的是exit命令。</div><div>&nbsp; 如果退出了，console失去连接，也不用慌，可以询问考官，他会指导你。也不用担心所做的</div><div>&nbsp; 答案丢失，据考官说每题都会保存。</div><div>&nbsp; 4 每个创建的yaml，你要知道是哪一题哪一个小题，来命名，否则检查时会搞混。</div><div>&nbsp; 5 考试时只允许有考试网站和k8s 文档两个标签页。你可以用书签记录下有用的k8s文档网站</div><div>&nbsp; 6 考试第一次没过没关系，有两次机会，记住题目差的不多，熟悉环境，熟悉题目第二次过就行。</div><div><br/></div><div><br/></div><div><br/></div><div>1.考试环境：房间一个，要求安静无人，桌面干净。可以带水杯，但是水杯上不能有包装纸。考官会要求用摄像头查看考试房间的四周墙壁，考试桌面，以及桌面下面。桌面上不要放任何杂物，包括护照，验证完也是要求放到其他地方。</div><div>2.考试方式： 只使用chrome浏览器，不会使用到其他软件。通过浏览器调用摄像头，麦克风，桌面分享等功能。如果遇到摄像头不允许打开，但是其他软件可以，可以尝试把外接耳机或者音频设备插入电脑。</div><div>3.考官交流： 与对方聊天全程打字，对方全程监控，并下达各种指令。对方会要求我们分享摄像头，分享桌面，没事不要乱动。全英文交流，所以只要英文阅读能力不错就行，其他时间可以全程输入ok。</div></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div></en-note>]]></content><created>20210218T140742Z</created><updated>20210223T062817Z</updated><tag>1.考试注意事项</tag><note-attributes><author>BurlyLuo</author></note-attributes></note><note><title>17.TS Kubernetes Cluster</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div>17.TS Kubernetes Cluster</div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>Task:</div><div>A kubernetes worker node.named wk8s-node-0 is in the state NotReady</div><div>Investigate why this is the case, and perform any appropriate steps to bring the nodes to a Ready state.ensuring that the change are made permanet</div><div><br/></div><div>kubectl config use-context xx</div></div><div><br/></div><div><br/></div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>ssh wk8s-node-0</div><div><br/></div><div>sudo -i</div><div><br/></div><div>systemctl status kubelet</div><div><br/></div><div>systemctl restart kubelet</div><div><br/></div><div>systemctl enable kubelet&nbsp;</div></div><div><br/></div></en-note>]]></content><created>20210222T142123Z</created><updated>20210222T142411Z</updated><note-attributes><author>BurlyLuo</author></note-attributes></note></en-export>
